{"version":3,"sources":["components/Header.js","components/Error.js","components/Form.js","components/Weather.js","components/Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","href","Error","message","component","Form","search","setSearch","setQuery","setLoading","useState","error","setError","city","country","handleChange","event","target","name","value","action","onSubmit","preventDefault","trim","id","onChange","htmlFor","autoComplete","type","Weather","data","main","wind","modifier","temp","parseFloat","toFixed","tempMax","temp_max","tempMin","temp_min","humidity","speed","pressure","Loader","App","query","setData","loading","useEffect","fetchAPI","a","url","fetch","response","json","result","cod","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d348bf2.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({title}) => {\r\n  return(\r\n    <nav>\r\n      <div className=\"nav-wrapper light-blue\">\r\n        <a href=\"#!\" className=\"brand-logo\">{title}</a>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({message, component}) => {\r\n  return(\r\n    <p className={`${component === \"App\" ? \"blue\" : \"red\"} darken-1 error`}>{message}</p>\r\n  );\r\n}\r\n\r\nError.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  component: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Error;","import React, { useState } from 'react';\r\nimport 'material-icons/iconfont/material-icons.css';\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Form = ({search, setSearch, setQuery, setLoading}) => {\r\n\r\n  const [ error, setError ] = useState(false);\r\n  \r\n  // Extract city and country\r\n  const { city, country } = search;\r\n\r\n  // Function that put elements in state\r\n  const handleChange = event => {\r\n    // Update state\r\n     setSearch({\r\n       ...search,\r\n       [event.target.name]: event.target.value\r\n     });\r\n  }\r\n  // When user submit the form\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    //Validate\r\n    if(city.trim() ===\"\" || country.trim() === \"\" ) {\r\n      setError(true);\r\n      return;\r\n    }\r\n\r\n    setError(false);\r\n    // Send to principal component (App)\r\n    setQuery(true);\r\n\r\n    // Starts Render the Spinner component\r\n    setLoading(true);\r\n  }\r\n\r\n  return(\r\n    <form \r\n      action=\"\"\r\n      onSubmit={handleSubmit}  \r\n    >\r\n      { error && \r\n      <Error \r\n        className=\"red darken-4 error\" \r\n        message=\"All fields are required\"\r\n        component=\"Form\"\r\n      />}\r\n      <div className=\"input-field col s12\">\r\n        <select \r\n            name=\"country\"  \r\n            id=\"country\"\r\n            value={country}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"\">-- Select a country --</option>\r\n            <option value=\"US\">Estados Unidos</option>\r\n            <option value=\"MX\">México</option>\r\n            <option value=\"AR\">Argentina</option>\r\n            <option value=\"CO\">Colombia</option>\r\n            <option value=\"CR\">Costa Rica</option>\r\n            <option value=\"ES\">España</option>\r\n            <option value=\"PE\">Perú</option>\r\n          </select>\r\n          <label htmlFor=\"country\">Country</label>\r\n      </div>\r\n      <div className=\"input-field col s12\">\r\n        <input \r\n          autoComplete=\"nope\"\r\n          type=\"text\"\r\n          name=\"city\"\r\n          id=\"city\"  \r\n          value={city}\r\n          onChange={handleChange}\r\n        />\r\n        <label htmlFor=\"city\">City:</label>\r\n      </div>\r\n      <div className=\"input-field col s12\">\r\n        <button\r\n          className=\"btn-large waves-effect waves-light purple \"\r\n          type=\"submit\"\r\n          name=\"action\"\r\n        >Get Weather\r\n        <i className=\"material-icons right\">send</i>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  search: PropTypes.object.isRequired, \r\n  setSearch: PropTypes.func.isRequired, \r\n  setQuery: PropTypes.func.isRequired, \r\n  setLoading: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Form;","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Weather = ({data}) => {\r\n\r\n  // Extract info\r\n  const { name, main, wind } = data;\r\n\r\n  if(!name) return null;\r\n\r\n  // Converting from Kelvin to Celcius degrees\r\n  const temp = parseFloat((main.temp - 273.15).toFixed(2));\r\n  const tempMax = parseFloat((main.temp_max - 273.15).toFixed(2));\r\n  const tempMin = parseFloat((main.temp_min - 273.15).toFixed(2));\r\n\r\n  let modifier;\r\n\r\n  modifier = temp >= 20 ? \"sun\" : (temp > 10 ? \"cloud\" :\"cloud-snow\")\r\n\r\n  return(\r\n    <Fragment>\r\n      <div className=\"card-panel white col s12\">\r\n        <div className=\"black-text\">\r\n          <h2 className=\"weather-city\">{name}</h2>\r\n          <div className=\"temperature\">\r\n           <span className={`icon-temp icon-temp--${modifier}`}></span> <p> { temp } <span> &#x2103; </span></p>\r\n          </div>\r\n          <p>\r\n            {`Max Temp:  ${tempMax}`} <span> &#x2103; </span>\r\n          </p>\r\n          <p>\r\n          {`Min Temp:  ${tempMin}`} <span> &#x2103; </span>\r\n          </p>\r\n          <ul className=\"data-weather\">\r\n            <li><span className=\"data-weather__item humidity\"></span> {`Humidity:  ${main.humidity} %`}</li>\r\n            <li><span className=\"data-weather__item wind\"></span> {`Wind:  ${wind.speed} m/s`}</li>\r\n            <li><span className=\"data-weather__item pressure\"></span> {`Pressure:  ${main.pressure} hPa`}</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nWeather.propTypes = {\r\n  data: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Weather;","import React from 'react';\r\nimport './Loader.css'\r\n\r\nconst Loader = () => {\r\n  return(\r\n    <div className=\"spinner\">\r\n      <div className=\"rect1\"></div>\r\n      <div className=\"rect2\"></div>\r\n      <div className=\"rect3\"></div>\r\n      <div className=\"rect4\"></div>\r\n      <div className=\"rect5\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;","import React, { Fragment, useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nimport Error from './components/Error';\nimport Loader from './components/Loader';\n\nfunction App() {\n\n  // Form state\n  const [ search, setSearch ] = useState({\n    city: \"\",\n    country: \"\"\n  });\n\n  const [ query, setQuery ] = useState(false);\n  const [ data, setData ] = useState({});\n  const [ loading, setLoading ] = useState(false);\n  const [ error, setError ] = useState(false);\n\n  // Extract city and country\n  const { city, country } = search;\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      if(query) {\n        const appId = \"81c719f6931898cacc8634f83bf11151\";\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${appId}`;\n\n        const response = await fetch(url);\n        const result = await response.json();\n\n        setData(result);\n        setQuery(false);\n\n        // If was correct results in the query:\n        if(result.cod === \"404\") {\n          setError(true);\n        } else {\n          setError(false);\n        }\n        setLoading(false);\n      }\n    }\n    fetchAPI();\n  },[query, city, country]);\n\n  return (\n    <Fragment>\n      <Header\n        title=\"Weather App\"\n      />\n      <div className=\"container-form\">\n        <div className=\"row\">\n          <div className=\"col m6 s12\">\n            <Form\n              search={search}\n              setSearch={setSearch}\n              setQuery={setQuery}\n              setLoading={setLoading}\n            />\n          </div>\n          <div className=\"col m6 s12\">\n            { loading && \n              <Loader />}\n            {\n            error \n            ?\n            !loading &&\n            <Error \n              message=\"No results\" \n              component=\"App\"\n            />\n            :\n            !loading &&\n            <Weather \n              data={data}\n            />\n            }\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}